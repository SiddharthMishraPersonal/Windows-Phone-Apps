using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Reactive;
using System.Reactive.Linq;
using System.Runtime.InteropServices.WindowsRuntime;
using System.Threading.Tasks;
using Windows.Foundation;
using Windows.Foundation.Collections;
using Windows.UI.Xaml;
using Windows.UI.Xaml.Controls;
using Windows.UI.Xaml.Controls.Primitives;
using Windows.UI.Xaml.Data;
using Windows.UI.Xaml.Input;
using Windows.UI.Xaml.Media;
using Windows.UI.Xaml.Navigation;
using channel_connect.Data;
using Microsoft.WindowsAzure.MobileServices;
using System.Collections.ObjectModel;
using channel_connect.Data.DataSchemas;

// The Blank Page item template is documented at http://go.microsoft.com/fwlink/?LinkID=390556

namespace channel_connect.Views
{
    /// <summary>
    /// An empty page that can be used on its own or navigated to within a Frame.
    /// </summary>
    public sealed partial class TransactionChat : Page
    {
        public static Microsoft.WindowsAzure.MobileServices.MobileServiceClient channel_connectClient = new Microsoft.WindowsAzure.MobileServices.MobileServiceClient(
    "https://channel-connect.azure-mobile.net/",
    "mgDihocRysIbjqVRHNOBOpIMSnknlT45");

        ObservableCollection<getpartnertransactions> _transactionCollection = new ObservableCollection<getpartnertransactions>();


        public TransactionChat()
        {
            this.InitializeComponent();
        }

        /// <summary>
        /// Invoked when this page is about to be displayed in a Frame.
        /// </summary>
        /// <param name="e">Event data that describes how this page was reached.
        /// This parameter is typically used to configure the page.</param>
        protected override void OnNavigatedTo(NavigationEventArgs e)
        {
            var observable = Observable.Generate(Unit.Default, x => true, x => x, x => x, x => TimeSpan.FromSeconds(1)).Timestamp();
            observable.Subscribe(_ =>
            {
                GetData();
            });
        }

        private async void GetData()
        {
            var source = new TransactionsDataSource();
            _transactionCollection.AddRangeUnique(await source.LoadDataAsync());

        }

        private void SendChatButton_OnClick(object sender, RoutedEventArgs e)
        {

        }
    }
}
